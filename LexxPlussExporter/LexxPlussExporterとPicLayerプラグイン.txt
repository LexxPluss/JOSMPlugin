LexxPlussExporterとPicLayerプラグイン

■座標系（精度は倍精度浮動小数点）
・EN座標系(EastNorth)
JOSM内部で標準的に使用されている座標系で東経と北緯のメートル単位の距離。Y軸は画面上部方向に増加。
・LatLon座標系
JOSMでファイル出力や表示に使用されている座標系。東経と北緯で度数単位。EN座標と相互変換可能。Y軸は画面上部方向に増加。
・ピクセル座標系
JOSMのメインウィンドウのアプリケーション領域画面と一対一に対応する座標系。Y軸は画面下部方向に増加。EN座標系とは画面表示スケールによって比率が変化。

■PicLayerプラグイン表示処理
PicLayerプラグインではスケール変更や拡大縮小・回転のアクションが発生した際にアフィン変換行列や画像表示位置を常に更新しており、表示処理内部で画像表示処理にパラメータとして表示位置、アフィン変換行列、スケールを与えて表示を変化させている。
内部に記録される画像位置は画像の中心を位置している。ただしアフィン行列による変換の影響を受けないので表示されている画像の中央ではなく変換前の画像中央位置となる。
PicLayerAbstractクラスはJOSMのlayerクラスを継承し、PicLayerの画像表示レイヤークラスの基底となる。ただし抽象クラスなのでかならず継承されたインスタンスが用意されるのでリファクタリングの際に注意する必要がある。

■LexxPlussExporterプラグインの処理
OSMのデータ保存処理をコピーし、拡張子を変えて処理している。JOSMでは例え保存ファイル種類を変更していても保存ファイル名の拡張子に応じた保存処理が優先されるので拡張子の変更は必須。
PicLayerプラグイン表示処理の逆変換処理を実施して画像上の座標を算出している。

保存処理手順
１．現在のアプリケーション表示領域から中央及び左上、1en当たりのピクセル数を取得。
２．PicLayerAbstractレイヤーの検索。
　保存対象のレイヤーリストからPicLayerAbstractクラスを継承したクラスのレイヤーを検索する。複数ある場合はより表側が優先される。一個もない場合はエラーにする。
３．発見したPicLayerAbstractレイヤーから表示画像、アフィン変換行列、表示位置を公開メソッドで取得。
４．保存対象のノードをバックアップし、ノートのEN座標をピクセル座標に変換して配列に格納。この際にY軸が逆転することに注意。
５．アフィン行列の逆変換を配列に対して実施する。アフィン変換の並行移動要素は不要なのでクリアしておく。この変換の回転・拡大縮小の原点はピクセル座標系でアプリケーション領域画面の中心となり、画像の左上や中央ではないので注意すること。
　　このアフィン行列は画像レイヤーのみの拡大縮小・回転に対応する。
６．変換した配列の座標に以下の処理を施す。
６．１．画面表示位置分を減算して画像中央が原点になるように移動。
６．２．表示用スケール変換。このときのスケール変換パラメータは原点周辺でしか有効でなく、ずれると大幅な誤差が発生するので必ず画像中央を原点に移動させて計算する必要がある。
６．３．画像横幅、縦幅を加算して画像上の座標に変換する。
６．４．変換座標をLatLon型クラスに搭載してノードに記録する。
７．変換したノードの座標をOSM本来の保存処理を使用してファイルに保存する。
８．ノード座標をバックアップから復元する

スケール計算に必要な幾つかのパラメータはPicLayerAbstractクラスで隠蔽されているのでリファクタリングを使用して抽出している。
